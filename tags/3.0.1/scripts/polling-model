#! /bin/sh

n=$1
if (test -z "$n") then
    exit -1
fi

echo "stochastic"
echo 
echo "rate mu = 1;"
echo "rate gamma = 200;"
echo "rate lambda = 1/$n;"
echo
echo "module server"
echo
echo "  s : [1..$n];"
echo "  a : [0..1] init 1;"
i=1
while (test $i -lt $n) do
    echo
    echo "  [loop${i}a] (s=$i)&(a=0) -> gamma : (s'=s+1);"
    echo "  [loop${i}b] (s=$i)&(a=0) -> gamma : (a'=1);"
    echo "  [serve$i] (s=$i)&(a=1) -> mu : (s'=s+1)&(a'=0);"
    i=`expr $i + 1`
done
echo
echo "  [loop${i}a] (s=$i)&(a=0) -> gamma : (s'=1);"
echo "  [loop${i}b] (s=$i)&(a=0) -> gamma : (a'=1);"
echo "  [serve$i] (s=$i)&(a=1) -> mu : (s'=1)&(a'=0);"
echo
echo "endmodule"
echo
echo "module station1"
echo
echo "  s1 : [0..1] init 1;"
echo
echo "  [loop1a] (s1=0) -> 1 : (s1'=0);"
echo "  []       (s1=0) -> lambda : (s1'=1);"
echo "  [loop1b] (s1=1) -> 1 : (s1'=1);"
echo "  [serve1] (s1=1) -> 1 : (s1'=0);"
echo
echo "endmodule"
i=2
while (test $i -le $n) do
    echo
    echo "module station$i = station1 [s1=s$i, loop1a=loop${i}a, loop1b=loop${i}b, serve1=serve$i] endmodule"
    i=`expr $i + 1`
done

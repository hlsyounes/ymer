#! /bin/sh

n=$1
if test -z "$n"; then
    exit -1
fi
if test $n -lt 2; then
    exit -1
fi

echo "stochastic"
echo
for i in `seq $n`; do
    echo "global fork$i : [0..2];"
done
echo
echo "module Phil1"
echo
echo "  s1 : [0..9];"
echo
echo "  [] (s1=0) -> 0.25 : (s1'=1);"
echo "  [] (s1=0) -> 0.25 : (s1'=2);"
echo "  [] (s1=0) -> 0.50 : (s1'=0);"
echo "  [] (s1=1) & (fork1=0) -> 1 : (s1'=4) & (fork1'=1);"
echo "  [] (s1=1) & !(fork1=0) -> 1 : (s1'=1);"
echo "  [] (s1=2) & (fork$n=0) -> 1 : (s1'=3) & (fork$n'=1);"
echo "  [] (s1=2) & !(fork$n=0) -> 1 : (s1'=2);"
echo "  [] (s1=3) & (fork1=0) -> 1 : (s1'=5) & (fork1'=1);"
echo "  [] (s1=3) & !(fork1=0) -> 1 : (s1'=3);"
echo "  [] (s1=4) & (fork$n=0) -> 1 : (s1'=5) & (fork$n'=1);"
echo "  [] (s1=4) & !(fork$n=0) -> 1 : (s1'=4);"
echo "  [] (s1=5) -> 0.5 : (s1'=6);"
echo "  [] (s1=5) -> 0.5 : (s1'=7);"
echo "  [] (s1=6) -> 0.9 : (s1'=9) & (fork1'=0);"
echo "  [] (s1=6) -> 0.1 : (s1'=9) & (fork1'=2);"
echo "  [] (s1=7) -> 0.9 : (s1'=8) & (fork$n'=0);"
echo "  [] (s1=7) -> 0.1 : (s1'=8) & (fork$n'=2);"
echo "  [] (s1=8) -> 0.9 : (s1'=0) & (fork1'=0);"
echo "  [] (s1=8) -> 0.1 : (s1'=0) & (fork1'=2);"
echo "  [] (s1=9) -> 0.9 : (s1'=0) & (fork$n'=0);"
echo "  [] (s1=9) -> 0.1 : (s1'=0) & (fork$n'=2);"
echo
echo "endmodule"
echo
for i in `seq 2 $n`; do
    j=`expr $i - 1`
    echo -n "module Phil$i = Phil1 [s1=s$i, fork1=fork$i, fork$n=fork$j] "
    echo "endmodule"
done

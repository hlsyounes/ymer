#! /bin/sh

n=$1
if (test -z "$n") then
    exit -1
fi

echo "stochastic"
echo
echo "const n = $n;"
echo
echo "rate mr1 = 1;"
echo "rate mr2 = 2/2;"
echo "rate mr3 = 2/3;"
echo "rate mr4 = 2/4;"
echo "rate cr1 = 1/10;"
echo "rate cr2 = 1/2;"
echo
echo "module robot"
echo
echo "  x1 : [1..n] init 1;"
echo "  y1 : [1..n] init 1;"
echo "  c  : [0..1] init 0;"
echo
echo "  [] (x1<n & c=0 & !(x1+1=x2 & y1=y2))        -> mr1 : (x1'=x1+1);"
echo "  [] (x1=n & y1<n & c=0 & !(x1+1=x2 & y1=y2)) -> mr1 : (y1'=y1+1);"
echo
echo "  [] (c=0) -> cr1 : (c'=1);"
echo "  [] (c=1) -> cr2 : (c'=0);"
echo
echo "endmodule"
echo
echo "module janitor"
echo
echo "  x2 : [1..n] init n;"
echo "  y2 : [1..n] init n;"
echo
echo "  [] (x2=1 & y2=1 & !(x2+1=x1 & y2=y1)) -> mr2 : (x2'=x2+1);"
echo "  [] (x2=1 & y2=1 & !(x2=x1 & y2+1=y1)) -> mr2 : (y2'=y2+1);"
echo "  [] (x2=1 & y2=n & !(x2+1=x1 & y2=y1)) -> mr2 : (x2'=x2+1);"
echo "  [] (x2=1 & y2=n & !(x2=x1 & y2-1=y1)) -> mr2 : (y2'=y2-1);"
echo "  [] (x2=n & y2=1 & !(x2-1=x1 & y2=y1)) -> mr2 : (x2'=x2-1);"
echo "  [] (x2=n & y2=1 & !(x2=x1 & y2+1=y1)) -> mr2 : (y2'=y2+1);"
echo "  [] (x2=n & y2=n & !(x2-1=x1 & y2=y1)) -> mr2 : (x2'=x2-1);"
echo "  [] (x2=n & y2=n & !(x2=x1 & y2-1=y1)) -> mr2 : (y2'=y2-1);"
echo
echo "  [] (x2=1 & y2>1 & y2<n & !(x2+1=x1 & y2=y1)) -> mr3 : (x2'=x2+1);"
echo "  [] (x2=1 & y2>1 & y2<n & !(x2=x1 & y2+1=y1)) -> mr3 : (y2'=y2+1);"
echo "  [] (x2=1 & y2>1 & y2<n & !(x2=x1 & y2-1=y1)) -> mr3 : (y2'=y2-1);"
echo "  [] (x2=n & y2>1 & y2<n & !(x2-1=x1 & y2=y1)) -> mr3 : (x2'=x2-1);"
echo "  [] (x2=n & y2>1 & y2<n & !(x2=x1 & y2+1=y1)) -> mr3 : (y2'=y2+1);"
echo "  [] (x2=n & y2>1 & y2<n & !(x2=x1 & y2-1=y1)) -> mr3 : (y2'=y2-1);"
echo "  [] (x2>1 & x2<n & y2=1 & !(x2=x1 & y2+1=y1)) -> mr3 : (y2'=y2+1);"
echo "  [] (x2>1 & x2<n & y2=1 & !(x2+1=x1 & y2=y1)) -> mr3 : (x2'=x2+1);"
echo "  [] (x2>1 & x2<n & y2=1 & !(x2-1=x1 & y2=y1)) -> mr3 : (x2'=x2-1);"
echo "  [] (x2>1 & x2<n & y2=n & !(x2=x1 & y2-1=y1)) -> mr3 : (y2'=y2-1);"
echo "  [] (x2>1 & x2<n & y2=n & !(x2+1=x1 & y2=y1)) -> mr3 : (x2'=x2+1);"
echo "  [] (x2>1 & x2<n & y2=n & !(x2-1=x1 & y2=y1)) -> mr3 : (x2'=x2-1);"
echo
echo "  [] (x2>1 & x2<n & y2>1 & y2<n & !(x2+1=x1 & y2=y1)) -> mr4 : (x2'=x2+1);"
echo "  [] (x2>1 & x2<n & y2>1 & y2<n & !(x2-1=x1 & y2=y1)) -> mr4 : (x2'=x2-1);"
echo "  [] (x2>1 & x2<n & y2>1 & y2<n & !(x2=x1 & y2+1=y1)) -> mr4 : (y2'=y2+1);"
echo "  [] (x2>1 & x2<n & y2>1 & y2<n & !(x2=x1 & y2-1=y1)) -> mr4 : (y2'=y2-1);"
echo
echo "endmodule"
